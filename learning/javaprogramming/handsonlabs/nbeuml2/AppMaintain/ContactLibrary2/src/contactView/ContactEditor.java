/*
 * ContactEditor.java
 *
 * Created on March 7, 2006, 10:36 AM
 */

package contactView;

import contact.Contact;
import contact.ContactList;
import contact.EMailAddress;
import contact.PersonalIdentity;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Wally Wedel
 */
public class ContactEditor extends javax.swing.JFrame {
    private DefaultTableModel contactTableModel;
    private ContactList contactList = new ContactList();
    /** Creates new form ContactEditor */
    public ContactEditor() {
        initContactTable();
        initComponents();
    }
    
    private void initContactTable() {
        Vector<String> colNames = new Vector<String>();
        String colName0 = "First Name";
        colNames.add(colName0);
        String colName1 = "Last Name";
        colNames.add("Last Name");
        String colName2 = "EMail Address";
        colNames.add(colName2);
        
        Vector<Vector<String>> data = new Vector<Vector<String>>();
        
        Vector<String> row0 = new Vector<String>();
        String row0col0 = "Gail";
        row0.add(row0col0);
        String row0col1 = "Gardner";
        row0.add(row0col1);
        String row0col2 = "Gail.Gardner@sun.com";
        row0.add(row0col2);
        data.add(row0);
        
        this.addContact(row0);
        
        Vector<String> row1 = new Vector<String>();
        String row1col0 = "Tom";
        row1.add(row1col0);
        String row1col1 = "Davis";
        row1.add(row1col1);
        String row1col2 = "Tom.Davis@sun.com";
        row1.add(row1col2);
        data.add(row1);
        
        this.addContact(row1);
        
        this.contactTableModel = new DefaultTableModel(data, colNames);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTextField1 = new javax.swing.JTextField();
        contactListPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contactTable = new javax.swing.JTable();
        buttonPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        eMailField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ContactEditor.this.windowClosing(evt);
            }
        });

        contactListPanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Contact List");
        contactListPanel.add(jLabel1, java.awt.BorderLayout.NORTH);

        contactTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Gail", "Gardner", "Gail.Gardner@sun.com"},
                {"Tom", "Davis", "Tom.Davis@sun.com"}
            },
            new String [] {
                "First Name", "Last Name", "EMail Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        contactTable.setModel(this.contactTableModel);
        jScrollPane1.setViewportView(contactTable);

        contactListPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(contactListPanel, java.awt.BorderLayout.CENTER);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("First Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        buttonPanel.add(jLabel2, gridBagConstraints);

        firstNameField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        buttonPanel.add(firstNameField, gridBagConstraints);

        jLabel3.setText("Last Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        buttonPanel.add(jLabel3, gridBagConstraints);

        lastNameField.setColumns(10);
        lastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameFieldActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        buttonPanel.add(lastNameField, gridBagConstraints);

        jLabel4.setText("EMail Address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        buttonPanel.add(jLabel4, gridBagConstraints);

        eMailField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        buttonPanel.add(eMailField, gridBagConstraints);

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        buttonPanel.add(updateButton, gridBagConstraints);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        buttonPanel.add(removeButton, gridBagConstraints);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        buttonPanel.add(addButton, gridBagConstraints);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
    
    private void windowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosing
        this.dumpContactList();
    }//GEN-LAST:event_windowClosing
    
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int rowIndex = this.contactTable.getSelectedRow();
        
        if( -1 < rowIndex ){
            String firstName = (String)this.contactTableModel.getValueAt(rowIndex, 0);
            String lastName = (String)this.contactTableModel.getValueAt(rowIndex,  1);
            String eMailAddress = (String)this.contactTableModel.getValueAt(rowIndex, 2);
            Vector<String> rowData = new Vector<String>();
            rowData.add(firstName);
            rowData.add(lastName);
            rowData.add(eMailAddress);
        }
    }//GEN-LAST:event_updateButtonActionPerformed
    
    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int rowIndex = this.contactTable.getSelectedRow();
        
        if( -1 < rowIndex ){
            this.contactTableModel.removeRow(rowIndex);
            this.removeContact(rowIndex);
        }
        
    }//GEN-LAST:event_removeButtonActionPerformed
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String firstName = this.firstNameField.getText();
        String lastName = this.lastNameField.getText();
        String eMailAddress = this.eMailField.getText();
        Vector<String> rowData = new Vector<String>();
        rowData.add(firstName);
        rowData.add(lastName);
        rowData.add(eMailAddress);
        this.contactTableModel.addRow(rowData);
        this.addContact(rowData);
    }//GEN-LAST:event_addButtonActionPerformed
    
    private void lastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameFieldActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_lastNameFieldActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactEditor().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel contactListPanel;
    private javax.swing.JTable contactTable;
    private javax.swing.JTextField eMailField;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
    
    private boolean addContact(Vector<String> rowData) {
        Contact contact = new Contact();
        if (contact.getHasPersonalIdentity()) {
            contact.getPersonalIdentity().setFirstName(rowData.get(0));
            contact.getPersonalIdentity().setLastName(rowData.get(1));
        } else {
            PersonalIdentity personalIdentity = new PersonalIdentity();
            personalIdentity.setFirstName(rowData.get(0));
            personalIdentity.setLastName(rowData.get(1));
            contact.setPersonalIdentity(personalIdentity);
        }
        EMailAddress eMailAddress = new EMailAddress();
        eMailAddress.setAddress(rowData.get(2));
        contact.getEMailAddressList().add(eMailAddress);
        return this.contactList.addContact(contact);
    }
    
    private Contact removeContact(int index) {
        return contactList.removeContact(index);
    }
    
    private Contact setContact(int index, Vector<String> rowData) {
        Contact contact = this.contactList.getContactList().get(index);
        contact.getPersonalIdentity().setFirstName(rowData.get(0));
        contact.getPersonalIdentity().setLastName(rowData.get(1));
        EMailAddress eMailAddress = new EMailAddress();
        eMailAddress.setAddress(rowData.get(2));
        contact.getEMailAddressList().set(0, eMailAddress);
        return this.contactList.setContact(index, contact);
    }

    private void dumpContactList() {
        Iterator i = this.contactList.getContactList().iterator();
        int cCount = 0;
        while (i.hasNext()) {
            Contact contact = (Contact)i.next();
            System.out.println("Contact " + cCount + " " + contact);
            cCount++;
        }
    }
}
